plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'com.google.protobuf' version '0.8.13'
    id 'idea'
}

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    implementation 'com.google.protobuf:protobuf-java:3.13.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
}

group = 'com.datadoghq'
version = '0.2.2-SNAPSHOT'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {

            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {

                name = 'DDSketch'
                description = 'A Fast and Fully-Mergeable Quantile Sketch with Relative-Error Guarantees.'
                url = 'https://github.com/DataDog/sketches-java'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0'
                    }
                }

                developers {
                    developer {
                        name = 'Charles Masson'
                        organization = 'Datadog'
                        email = 'charles.masson@datadoghq.com'
                    }
                    developer {
                        name = 'Jee E. Rim'
                        organization = 'Datadog'
                        email = 'jee.rim@datadoghq.com'
                    }
                    developer {
                        name = 'Homin K. Lee'
                        organization = 'Datadog'
                        email = 'homin@datadoghq.com'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/DataDog/sketches-java.git'
                    developerConnection = 'scm:git:ssh://github.com:DataDog/sketches-java.git'
                    url = 'http://github.com/DataDog/sketches-java'
                }
            }
        }
    }

    repositories {
        maven {

            def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
            def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots'
            url = version.contains('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
