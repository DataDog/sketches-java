plugins {
    id 'java-library'
    id 'maven-publish'
    id 'io.github.gradle-nexus.publish-plugin' version '1.0.0'
    id 'signing'
    id 'com.google.protobuf' version '0.8.13'
    id 'idea'
    id 'me.champeau.jmh' version '0.6.5'
    id "com.diffplug.spotless" version "5.11.1"
}

repositories {
    mavenCentral()
}

group = 'com.datadoghq'
version = '0.8.3'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

sourceSets {
    protobuf {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
        }
    }
    test {
        java {
            // make protobuf bindings available to tests
            compileClasspath += protobuf.output
            runtimeClasspath += protobuf.output
        }
    }
    jmh {
        java {
            // make protobuf bindings available to jmh
            compileClasspath += protobuf.output
            runtimeClasspath += protobuf.output
        }
    }
}

configurations {
    protobufCompile.extendsFrom compileClasspath
    protobufRuntime.extendsFrom runtimeClasspath
}

java {
    registerFeature('protobuf') {
        usingSourceSet(sourceSets.protobuf)
        capability('com.datadoghq', 'sketches-java-proto', version)
    }
}

dependencies {
    protobufImplementation 'com.google.protobuf:protobuf-java:3.13.0'
    testImplementation 'com.google.protobuf:protobuf-java:3.13.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
    testImplementation 'org.assertj:assertj-core:3.19.0'
    testImplementation 'org.openjdk.jol:jol-core:0.10'
}

protobuf {
    // make it possible to build without protoc installed
    protoc {
        artifact = 'com.google.protobuf:protoc:3.3.0'
    }
}

javadoc {
    options.header = '<script type="text/javascript" id="MathJax-script" async' +
            '  src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml.js">' +
            '</script>'
    options.addBooleanOption('-allow-script-in-comments', true)
}

jmh {
    jmhVersion = '1.26'
}

jmhJar {
    from sourceSets.main.output
    from sourceSets.protobuf.output
}

jar {
    from sourceSets.main.output
    from sourceSets.protobuf.output
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

test {
    useJUnitPlatform()
    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
}

spotless {
    java {
        googleJavaFormat()
        licenseHeader '/* Unless explicitly stated otherwise all files in this repository are licensed under the Apache License 2.0.\n' +
            ' * This product includes software developed at Datadog (https://www.datadoghq.com/).\n' +
            ' * Copyright $YEAR Datadog, Inc.\n' +
            ' */\n' +
            '\n'
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {

            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {

                name = 'DDSketch'
                description = 'A Fast and Fully-Mergeable Quantile Sketch with Relative-Error Guarantees.'
                url = 'https://github.com/DataDog/sketches-java'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0'
                    }
                }

                developers {
                    developer {
                        name = 'Charles Masson'
                        organization = 'Datadog'
                        email = 'charles.masson@datadoghq.com'
                    }
                    developer {
                        name = 'Jee E. Rim'
                        organization = 'Datadog'
                        email = 'jee.rim@datadoghq.com'
                    }
                    developer {
                        name = 'Homin K. Lee'
                        organization = 'Datadog'
                        email = 'homin@datadoghq.com'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/DataDog/sketches-java.git'
                    developerConnection = 'scm:git:ssh://github.com:DataDog/sketches-java.git'
                    url = 'http://github.com/DataDog/sketches-java'
                }
            }
        }
    }
}

nexusPublishing {
    repositories {
        sonatype {
            username = System.getenv("SONATYPE_USERNAME")
            password = System.getenv("SONATYPE_PASSWORD")
        }
    }
}

signing {
    useInMemoryPgpKeys(System.getenv("GPG_PRIVATE_KEY"), System.getenv("GPG_PASSPHRASE"))
    sign publishing.publications.mavenJava
}
